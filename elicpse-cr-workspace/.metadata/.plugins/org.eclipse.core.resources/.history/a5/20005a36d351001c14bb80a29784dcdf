package cashier_register;

import java.util.LinkedList;
import java.util.Queue;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.concurrent.TimeUnit;

public class Client{
    private final int port;
    private final String host;
    private boolean stop;
    public Queue<String> queue = new LinkedList<>();
    public Queue<String> resp = new LinkedList<>();
    public boolean eventHandled = true;
    Main main = null;

    Client(String host, int port) {
        this.port = port;
        this.host = host;
    }

    private void runClient() {
        try {
            stop = false;
            Socket socket = new Socket(host, port);
            DataInputStream in = new DataInputStream( socket.getInputStream() );
            DataOutputStream out = new DataOutputStream( socket.getOutputStream() );
            
            while (!stop) {
                TimeUnit.SECONDS.sleep(3);
                
                //this.main.socketListener(this.main);
                
                String msg = getClientMessage();
                
                if (msg != null) {
                	out.writeUTF(msg);
                }
                
                String _resp = null;
                
                if (in.available() != 0) {
                	_resp = in.readUTF();
                }
                
                //_resp = in.readUTF();
                
                if (_resp != "" && _resp != null) {
                	this.resp.add(_resp);
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public Client activate(Main main) {
    	this.main = main;
        new Thread(()->runClient()).start();
        return this;
    }

    public void stop() {
        stop = true;
    }

    private String getClientMessage() {
    	if (queue.size() > 0) {
    		String value = queue.remove();
    		System.out.println(value);
    		return value;
    	} else {
    		System.out.println("Queue is empty!");
    	}
    	
    	return null;
    }
    
    public void clearResp() {
    	this.resp = null;
    }
}